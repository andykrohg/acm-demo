---
- hosts: localhost
  tasks:
  - name: Get Load Balancer Deployment
    k8s_info:
      api_version: v1
      kind: Deployment
      namespace: acm-demo
      name: load-balancer
    register: load_balancer_deployment

  - set_fact:
      config_map_name: "{{ load_balancer_deployment.resources[0].spec.template.spec | json_query(\"volumes[?name=='load-balancer-config'].configMap.name\") | join }}"

  - name: Get Load Balancer ConfigMap
    k8s_info:
      api_version: v1
      kind: ConfigMap
      namespace: acm-demo
      name: '{{ config_map_name }}'
    register: load_balancer_config_map

  - set_fact:
      load_balancer_conf: "{{ load_balancer_config_map.resources[0].data['load-balancer.conf'] }}"

  - set_fact:
      load_balancer_members: "{{ load_balancer_conf.split('\n') | select('match', '^ {4}BalancerMember') | list }}"

  - set_fact:
      load_balancer_members: "{{ load_balancer_members + ['    BalancerMember \"' + new_endpoint + '\"'] }}"
    when: load_balancer_members | select('match', '.*' + new_endpoint) | list | count == 0

  - name: Create immutable ConfigMap containing new BalancerMember
    k8s:
      definition: "{{ lookup('template', './config-map.yml.j2') }}"
      append_hash: true
  
  - name: Patch Deployment to use new ConfigMap
    k8s:
      definition: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: load-balancer
          namespace: acm-demo
        spec:
          template:
            spec:
              volumes:
              - name: load-balancer-config
                configMap:
                  name: {{ lookup('template', './config-map.yml.j2') | from_yaml | k8s_config_resource_name }}


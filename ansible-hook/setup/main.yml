---
- hosts: localhost
  vars:
    tower_server: https://ansible-tower-web-svc-tower.apps.cluster-3c03.3c03.example.opentlc.com
    tower_username: admin
    tower_password: password

    hub_cluster:
      cluster_domain: cluster-3c03.3c03.example.opentlc.com
      username: kubeadmin
      password: password

    # Add more here as needed
    spoke_clusters:
    - cluster_domain: cluster-naps-5e4e.naps-5e4e.sandbox1367.opentlc.com
      username: kubeadmin
      password: password
  tasks: 
  - set_fact:
      managed_ocp_clusters: '{{ [hub_cluster] + spoke_clusters }}'
  
  # Build out Tower Resources
  - name: Create Tower access token
    uri:
      url: '{{ tower_server }}/api/v2/tokens/'
      body_format: json
      body: '{}'
      method: POST
      headers:
        Authorization: "Basic {{ (tower_username + ':' + tower_password) | b64encode }}"
      status_code: 201
    register: token_response

  - set_fact:
      tower_token: "{{ token_response.json.token }}"

  - name: Create acm-demo Project
    uri:
      url: '{{ tower_server }}/api/v2/organizations/1/projects/'
      body_format: json
      body: '{{ lookup("template", "./templates/tower_project.yml.j2") | from_yaml }}'
      method: POST
      headers:
        Authorization: 'Bearer {{ tower_token }}'
      status_code: 201,400
    register: project_response
  
  - name: Wait a lil moment to allow the project to sync
    pause:
      seconds: 15

  - name: Get an OCP token for the Hub Cluster
    community.kubernetes.k8s_auth:
      username: "{{ hub_cluster.username }}"
      password: "{{ hub_cluster.password }}"
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      validate_certs: no
    register: k8s_auth_result

  - set_fact:
      hub_ocp_token: '{{ k8s_auth_result.k8s_auth.api_key }}'

  - name: Create Job Template
    uri:
      url: '{{ tower_server }}/api/v2/organizations/1/job_templates/'
      body_format: json
      body: '{{ lookup("template", "./templates/job_template.yml.j2") | from_yaml }}'
      method: POST
      headers:
        Authorization: 'Bearer {{ tower_token }}'
      status_code: 201,400
    ignore_errors: true

  - name: Create Tower Secret in acm-demo namespace
    k8s:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      validate_certs: no
      api_key: '{{ hub_ocp_token }}'
      definition: "{{ lookup('template', './templates/tower-secret.yml.j2') | from_yaml }}"  

  - name: Get a list of operator groups
    k8s_info:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      api_key: '{{ hub_ocp_token }}'
      validate_certs: no
      api_version: operators.coreos.com/v1
      kind: OperatorGroup
      namespace: acm-demo
    register: operator_groups

  - set_fact:
      operator_group_name: '{{ operator_groups.resources[0].metadata.name }}'
    when: operator_groups.resources

  - name: Ensure OperatorGroup exists
    k8s:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      api_key: '{{ hub_ocp_token }}'
      validate_certs: no
      definition: '{{ lookup("template", "./templates/operator-group.yml.j2") }}'

  - name: Subscribe to AAP Resource Operator
    k8s:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      validate_certs: no
      api_key: '{{ hub_ocp_token }}'
      definition: "{{ lookup('template', './templates/aapro-subscription.yml.j2') }}" 

  - name: Install OPA in Hub Cluster
    include_tasks: setup_opa.yml

  - name: Install Load Balancer in Hub Cluster
    k8s:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      validate_certs: no
      api_key: '{{ hub_ocp_token }}'
      definition: "{{ lookup('template', './templates/load-balancer.yml.j2') }}" 

  - name: Create a External IPs Policy resources
    k8s:
      host: "https://api.{{ hub_cluster.cluster_domain }}:6443"
      validate_certs: no
      api_key: '{{ hub_ocp_token }}'
      definition: "{{ lookup('file', '../../opa/policy-resources.yaml') }}"

  - name: 'Create ClusterRolerRoleBinding and Gatekeeper install in {{ cluster.cluster_domain }}'
    include_tasks: create_clusterrolebinding_and_gatekeeper.yml
    loop: '{{ managed_ocp_clusters }}'
    loop_control:
      loop_var: cluster
      label: '{{ cluster.cluster_domain }}'

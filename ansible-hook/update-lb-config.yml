---
- hosts: localhost
  vars:
    ansible_python_interpreter: /var/lib/awx/venv/ansible/bin/python
  tasks:
  - set_fact:
      load_balancer_members: []

  - name: Get load-balancer Deployment
    k8s_info:
      host: '{{ hub_api_server }}'
      api_key: '{{ hub_ocp_token }}'
      kind: Deployment
      namespace: acm-demo
      name: load-balancer
    register: load_balancer_deployment

  - set_fact:
      config_map_name: "{{ load_balancer_deployment.resources[0].spec.template.spec | json_query('volumes[?name==`load-balancer-config`].configMap.name') | join }}"
    
  - name: Get ConfigMap
    k8s_info:
      host: '{{ hub_api_server }}'
      api_key: '{{ hub_ocp_token }}'
      kind: ConfigMap
      namespace: acm-demo
      name: '{{ config_map_name }}'
    register: config_map

  - set_fact:
      load_balancer_members: '{{ config_map.resources[0].data["load-balancer.conf"] | regex_findall(expression)}}'
    vars:
      expression: '    BalancerMember ".*"'

  - name: Create Balancer Members
    include_tasks: create_balancer_member.yml
    loop: '{{ target_clusters }}'
    loop_control:
      loop_var: target_cluster
      label: '{{ target_cluster }}'

  - name: Create immutable ConfigMap containing new BalancerMember
    k8s:
      host: '{{ hub_api_server }}'
      api_key: '{{ hub_ocp_token }}'
      validate_certs: no
      definition: "{{ lookup('template', './config-map.yml.j2') }}"
      append_hash: true
  
  - name: Patch Deployment to use new ConfigMap
    k8s:
      host: '{{ hub_api_server }}'
      api_key: '{{ hub_ocp_token }}'
      validate_certs: no
      definition: |
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: load-balancer
          namespace: acm-demo
        spec:
          template:
            spec:
              volumes:
              - name: load-balancer-config
                configMap:
                  name: {{ lookup('template', './config-map.yml.j2') | from_yaml | k8s_config_resource_name }}

